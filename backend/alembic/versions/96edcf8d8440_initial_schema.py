"""initial_schema

Revision ID: 96edcf8d8440
Revises:
Create Date: 2025-10-01 21:38:56.335763

"""

from typing import Sequence, Union

import sqlalchemy as sa
from alembic import op

# revision identifiers, used by Alembic.
revision: str = "96edcf8d8440"
down_revision: Union[str, Sequence[str], None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "llm_providers",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("name", sa.String(length=100), nullable=False),
        sa.Column("provider_type", sa.String(length=50), nullable=False),
        sa.Column("api_endpoint", sa.String(length=255), nullable=True),
        sa.Column("model_name", sa.String(length=100), nullable=False),
        sa.Column("max_tokens", sa.Integer(), nullable=False),
        sa.Column("temperature", sa.Float(), nullable=False),
        sa.Column("is_active", sa.Boolean(), nullable=False),
        sa.Column("configuration", sa.JSON(), nullable=True),
        sa.Column(
            "created_at",
            sa.DateTime(timezone=True),
            server_default=sa.text("now()"),
            nullable=False,
        ),
        sa.Column(
            "updated_at",
            sa.DateTime(timezone=True),
            server_default=sa.text("now()"),
            nullable=False,
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(op.f("ix_llm_providers_id"), "llm_providers", ["id"], unique=False)
    op.create_index(
        op.f("ix_llm_providers_name"), "llm_providers", ["name"], unique=True
    )
    op.create_table(
        "users",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("chrome_user_id", sa.String(length=255), nullable=False),
        sa.Column("email", sa.String(length=320), nullable=False),
        sa.Column("display_name", sa.String(length=255), nullable=False),
        sa.Column("is_admin", sa.Boolean(), nullable=False),
        sa.Column("is_active", sa.Boolean(), nullable=False),
        sa.Column("refresh_token", sa.Text(), nullable=True),
        sa.Column("token_expires_at", sa.DateTime(timezone=True), nullable=True),
        sa.Column("oauth_scopes", sa.String(length=500), nullable=True),
        sa.Column(
            "created_at",
            sa.DateTime(timezone=True),
            server_default=sa.text("now()"),
            nullable=False,
        ),
        sa.Column(
            "updated_at",
            sa.DateTime(timezone=True),
            server_default=sa.text("now()"),
            nullable=False,
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index("idx_user_active", "users", ["is_active"], unique=False)
    op.create_index("idx_user_chrome_id", "users", ["chrome_user_id"], unique=False)
    op.create_index("idx_user_email", "users", ["email"], unique=False)
    op.create_index(
        op.f("ix_users_chrome_user_id"), "users", ["chrome_user_id"], unique=True
    )
    op.create_index(op.f("ix_users_email"), "users", ["email"], unique=True)
    op.create_index(op.f("ix_users_id"), "users", ["id"], unique=False)
    op.create_table(
        "sites",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("domain", sa.String(length=255), nullable=False),
        sa.Column("user_context", sa.Text(), nullable=True),
        sa.Column("is_active", sa.Boolean(), nullable=False),
        sa.Column("user_id", sa.Integer(), nullable=False),
        sa.Column(
            "created_at",
            sa.DateTime(timezone=True),
            server_default=sa.text("now()"),
            nullable=False,
        ),
        sa.Column(
            "updated_at",
            sa.DateTime(timezone=True),
            server_default=sa.text("now()"),
            nullable=False,
        ),
        sa.ForeignKeyConstraint(["user_id"], ["users.id"], ondelete="CASCADE"),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(
        "idx_site_domain_user", "sites", ["domain", "user_id"], unique=False
    )
    op.create_index("idx_site_user_id", "sites", ["user_id"], unique=False)
    op.create_index(op.f("ix_sites_domain"), "sites", ["domain"], unique=True)
    op.create_index(op.f("ix_sites_id"), "sites", ["id"], unique=False)
    op.create_index(op.f("ix_sites_user_id"), "sites", ["user_id"], unique=False)
    op.create_table(
        "usage_costs",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("date", sa.Date(), nullable=False),
        sa.Column("total_requests", sa.Integer(), nullable=False),
        sa.Column("total_cost_usd", sa.Float(), nullable=False),
        sa.Column("total_input_tokens", sa.Integer(), nullable=False),
        sa.Column("total_output_tokens", sa.Integer(), nullable=False),
        sa.Column("user_id", sa.Integer(), nullable=False),
        sa.Column("llm_provider_id", sa.Integer(), nullable=True),
        sa.Column(
            "created_at",
            sa.DateTime(timezone=True),
            server_default=sa.text("now()"),
            nullable=False,
        ),
        sa.Column(
            "updated_at",
            sa.DateTime(timezone=True),
            server_default=sa.text("now()"),
            nullable=False,
        ),
        sa.ForeignKeyConstraint(
            ["llm_provider_id"], ["llm_providers.id"], ondelete="CASCADE"
        ),
        sa.ForeignKeyConstraint(["user_id"], ["users.id"], ondelete="CASCADE"),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(
        "idx_usage_costs_provider", "usage_costs", ["llm_provider_id"], unique=False
    )
    op.create_index(
        "idx_usage_costs_user_date", "usage_costs", ["user_id", "date"], unique=False
    )
    op.create_index(op.f("ix_usage_costs_id"), "usage_costs", ["id"], unique=False)
    op.create_index(
        op.f("ix_usage_costs_llm_provider_id"),
        "usage_costs",
        ["llm_provider_id"],
        unique=False,
    )
    op.create_index(
        op.f("ix_usage_costs_user_id"), "usage_costs", ["user_id"], unique=False
    )
    op.create_table(
        "pages",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("url", sa.String(length=2048), nullable=False),
        sa.Column("title", sa.String(length=500), nullable=True),
        sa.Column("page_summary", sa.Text(), nullable=True),
        sa.Column("user_context", sa.Text(), nullable=True),
        sa.Column("is_active", sa.Boolean(), nullable=False),
        sa.Column("site_id", sa.Integer(), nullable=False),
        sa.Column("user_id", sa.Integer(), nullable=False),
        sa.Column(
            "created_at",
            sa.DateTime(timezone=True),
            server_default=sa.text("now()"),
            nullable=False,
        ),
        sa.Column(
            "updated_at",
            sa.DateTime(timezone=True),
            server_default=sa.text("now()"),
            nullable=False,
        ),
        sa.ForeignKeyConstraint(["site_id"], ["sites.id"], ondelete="CASCADE"),
        sa.ForeignKeyConstraint(["user_id"], ["users.id"], ondelete="CASCADE"),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index("idx_page_site_user", "pages", ["site_id", "user_id"], unique=False)
    op.create_index("idx_page_url_user", "pages", ["url", "user_id"], unique=False)
    op.create_index("idx_page_user_id", "pages", ["user_id"], unique=False)
    op.create_index(op.f("ix_pages_id"), "pages", ["id"], unique=False)
    op.create_index(op.f("ix_pages_site_id"), "pages", ["site_id"], unique=False)
    op.create_index(op.f("ix_pages_url"), "pages", ["url"], unique=False)
    op.create_index(op.f("ix_pages_user_id"), "pages", ["user_id"], unique=False)
    op.create_table(
        "user_site_shares",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column(
            "permission_level",
            sa.Enum("VIEW", "EDIT", "ADMIN", name="permissionlevel"),
            nullable=False,
        ),
        sa.Column("is_active", sa.Boolean(), nullable=False),
        sa.Column("user_id", sa.Integer(), nullable=False),
        sa.Column("site_id", sa.Integer(), nullable=False),
        sa.Column(
            "created_at",
            sa.DateTime(timezone=True),
            server_default=sa.text("now()"),
            nullable=False,
        ),
        sa.Column(
            "updated_at",
            sa.DateTime(timezone=True),
            server_default=sa.text("now()"),
            nullable=False,
        ),
        sa.ForeignKeyConstraint(["site_id"], ["sites.id"], ondelete="CASCADE"),
        sa.ForeignKeyConstraint(["user_id"], ["users.id"], ondelete="CASCADE"),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(
        "idx_user_site_share_permission",
        "user_site_shares",
        ["permission_level"],
        unique=False,
    )
    op.create_index(
        "idx_user_site_share_unique",
        "user_site_shares",
        ["user_id", "site_id"],
        unique=True,
    )
    op.create_index(
        op.f("ix_user_site_shares_id"), "user_site_shares", ["id"], unique=False
    )
    op.create_index(
        op.f("ix_user_site_shares_site_id"),
        "user_site_shares",
        ["site_id"],
        unique=False,
    )
    op.create_index(
        op.f("ix_user_site_shares_user_id"),
        "user_site_shares",
        ["user_id"],
        unique=False,
    )
    op.create_table(
        "notes",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("content", sa.Text(), nullable=False),
        sa.Column("position_x", sa.Integer(), nullable=True),
        sa.Column("position_y", sa.Integer(), nullable=True),
        sa.Column("anchor_data", sa.JSON(), nullable=True),
        sa.Column("is_active", sa.Boolean(), nullable=False),
        sa.Column("server_link_id", sa.String(length=100), nullable=True),
        sa.Column("highlighted_text", sa.Text(), nullable=True),
        sa.Column("page_section_html", sa.Text(), nullable=True),
        sa.Column("page_id", sa.Integer(), nullable=False),
        sa.Column("user_id", sa.Integer(), nullable=False),
        sa.Column(
            "created_at",
            sa.DateTime(timezone=True),
            server_default=sa.text("now()"),
            nullable=False,
        ),
        sa.Column(
            "updated_at",
            sa.DateTime(timezone=True),
            server_default=sa.text("now()"),
            nullable=False,
        ),
        sa.ForeignKeyConstraint(["page_id"], ["pages.id"], ondelete="CASCADE"),
        sa.ForeignKeyConstraint(["user_id"], ["users.id"], ondelete="CASCADE"),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index("idx_note_page_user", "notes", ["page_id", "user_id"], unique=False)
    op.create_index("idx_note_user_id", "notes", ["user_id"], unique=False)
    op.create_index(op.f("ix_notes_id"), "notes", ["id"], unique=False)
    op.create_index(op.f("ix_notes_page_id"), "notes", ["page_id"], unique=False)
    op.create_index(
        op.f("ix_notes_server_link_id"), "notes", ["server_link_id"], unique=False
    )
    op.create_index(op.f("ix_notes_user_id"), "notes", ["user_id"], unique=False)
    op.create_table(
        "page_sections",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("section_type", sa.String(length=50), nullable=False),
        sa.Column("content", sa.Text(), nullable=False),
        sa.Column("selector", sa.String(length=500), nullable=True),
        sa.Column("xpath", sa.String(length=500), nullable=True),
        sa.Column("position_in_page", sa.Integer(), nullable=False),
        sa.Column("is_active", sa.Boolean(), nullable=False),
        sa.Column("page_id", sa.Integer(), nullable=False),
        sa.Column(
            "created_at",
            sa.DateTime(timezone=True),
            server_default=sa.text("now()"),
            nullable=False,
        ),
        sa.Column(
            "updated_at",
            sa.DateTime(timezone=True),
            server_default=sa.text("now()"),
            nullable=False,
        ),
        sa.ForeignKeyConstraint(["page_id"], ["pages.id"], ondelete="CASCADE"),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(op.f("ix_page_sections_id"), "page_sections", ["id"], unique=False)
    op.create_index(
        op.f("ix_page_sections_page_id"), "page_sections", ["page_id"], unique=False
    )
    op.create_table(
        "user_page_shares",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column(
            "permission_level",
            sa.Enum("VIEW", "EDIT", "ADMIN", name="permissionlevel"),
            nullable=False,
        ),
        sa.Column("is_active", sa.Boolean(), nullable=False),
        sa.Column("user_id", sa.Integer(), nullable=False),
        sa.Column("page_id", sa.Integer(), nullable=False),
        sa.Column(
            "created_at",
            sa.DateTime(timezone=True),
            server_default=sa.text("now()"),
            nullable=False,
        ),
        sa.Column(
            "updated_at",
            sa.DateTime(timezone=True),
            server_default=sa.text("now()"),
            nullable=False,
        ),
        sa.ForeignKeyConstraint(["page_id"], ["pages.id"], ondelete="CASCADE"),
        sa.ForeignKeyConstraint(["user_id"], ["users.id"], ondelete="CASCADE"),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(
        "idx_user_page_share_permission",
        "user_page_shares",
        ["permission_level"],
        unique=False,
    )
    op.create_index(
        "idx_user_page_share_unique",
        "user_page_shares",
        ["user_id", "page_id"],
        unique=True,
    )
    op.create_index(
        op.f("ix_user_page_shares_id"), "user_page_shares", ["id"], unique=False
    )
    op.create_index(
        op.f("ix_user_page_shares_page_id"),
        "user_page_shares",
        ["page_id"],
        unique=False,
    )
    op.create_index(
        op.f("ix_user_page_shares_user_id"),
        "user_page_shares",
        ["user_id"],
        unique=False,
    )
    op.create_table(
        "note_artifacts",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("artifact_type", sa.String(length=50), nullable=False),
        sa.Column("content", sa.Text(), nullable=False),
        sa.Column("prompt_used", sa.Text(), nullable=True),
        sa.Column("generation_metadata", sa.JSON(), nullable=True),
        sa.Column("is_active", sa.Boolean(), nullable=False),
        sa.Column("artifact_url", sa.String(length=500), nullable=True),
        sa.Column("cost_usd", sa.Float(), nullable=True),
        sa.Column("input_tokens", sa.Integer(), nullable=True),
        sa.Column("output_tokens", sa.Integer(), nullable=True),
        sa.Column("generation_source", sa.String(length=50), nullable=True),
        sa.Column("user_type_description", sa.Text(), nullable=True),
        sa.Column("artifact_subtype", sa.String(length=100), nullable=True),
        sa.Column("note_id", sa.Integer(), nullable=False),
        sa.Column("llm_provider_id", sa.Integer(), nullable=True),
        sa.Column(
            "created_at",
            sa.DateTime(timezone=True),
            server_default=sa.text("now()"),
            nullable=False,
        ),
        sa.Column(
            "updated_at",
            sa.DateTime(timezone=True),
            server_default=sa.text("now()"),
            nullable=False,
        ),
        sa.ForeignKeyConstraint(
            ["llm_provider_id"], ["llm_providers.id"], ondelete="CASCADE"
        ),
        sa.ForeignKeyConstraint(["note_id"], ["notes.id"], ondelete="CASCADE"),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(
        op.f("ix_note_artifacts_id"), "note_artifacts", ["id"], unique=False
    )
    op.create_index(
        op.f("ix_note_artifacts_llm_provider_id"),
        "note_artifacts",
        ["llm_provider_id"],
        unique=False,
    )
    op.create_index(
        op.f("ix_note_artifacts_note_id"), "note_artifacts", ["note_id"], unique=False
    )
    op.create_table(
        "other_artifact_requests",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("user_description", sa.Text(), nullable=False),
        sa.Column("custom_instructions", sa.Text(), nullable=True),
        sa.Column("category", sa.String(length=50), nullable=True),
        sa.Column("should_add_to_dropdown", sa.Boolean(), nullable=True),
        sa.Column("similar_count", sa.Integer(), nullable=False),
        sa.Column("user_id", sa.Integer(), nullable=False),
        sa.Column("artifact_id", sa.Integer(), nullable=True),
        sa.Column(
            "created_at",
            sa.DateTime(timezone=True),
            server_default=sa.text("now()"),
            nullable=False,
        ),
        sa.Column(
            "updated_at",
            sa.DateTime(timezone=True),
            server_default=sa.text("now()"),
            nullable=False,
        ),
        sa.ForeignKeyConstraint(
            ["artifact_id"], ["note_artifacts.id"], ondelete="SET NULL"
        ),
        sa.ForeignKeyConstraint(["user_id"], ["users.id"], ondelete="CASCADE"),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(
        "idx_other_requests_category",
        "other_artifact_requests",
        ["category"],
        unique=False,
    )
    op.create_index(
        "idx_other_requests_user", "other_artifact_requests", ["user_id"], unique=False
    )
    op.create_index(
        op.f("ix_other_artifact_requests_artifact_id"),
        "other_artifact_requests",
        ["artifact_id"],
        unique=False,
    )
    op.create_index(
        op.f("ix_other_artifact_requests_id"),
        "other_artifact_requests",
        ["id"],
        unique=False,
    )
    op.create_index(
        op.f("ix_other_artifact_requests_user_id"),
        "other_artifact_requests",
        ["user_id"],
        unique=False,
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(
        op.f("ix_other_artifact_requests_user_id"), table_name="other_artifact_requests"
    )
    op.drop_index(
        op.f("ix_other_artifact_requests_id"), table_name="other_artifact_requests"
    )
    op.drop_index(
        op.f("ix_other_artifact_requests_artifact_id"),
        table_name="other_artifact_requests",
    )
    op.drop_index("idx_other_requests_user", table_name="other_artifact_requests")
    op.drop_index("idx_other_requests_category", table_name="other_artifact_requests")
    op.drop_table("other_artifact_requests")
    op.drop_index(op.f("ix_note_artifacts_note_id"), table_name="note_artifacts")
    op.drop_index(
        op.f("ix_note_artifacts_llm_provider_id"), table_name="note_artifacts"
    )
    op.drop_index(op.f("ix_note_artifacts_id"), table_name="note_artifacts")
    op.drop_table("note_artifacts")
    op.drop_index(op.f("ix_user_page_shares_user_id"), table_name="user_page_shares")
    op.drop_index(op.f("ix_user_page_shares_page_id"), table_name="user_page_shares")
    op.drop_index(op.f("ix_user_page_shares_id"), table_name="user_page_shares")
    op.drop_index("idx_user_page_share_unique", table_name="user_page_shares")
    op.drop_index("idx_user_page_share_permission", table_name="user_page_shares")
    op.drop_table("user_page_shares")
    op.drop_index(op.f("ix_page_sections_page_id"), table_name="page_sections")
    op.drop_index(op.f("ix_page_sections_id"), table_name="page_sections")
    op.drop_table("page_sections")
    op.drop_index(op.f("ix_notes_user_id"), table_name="notes")
    op.drop_index(op.f("ix_notes_server_link_id"), table_name="notes")
    op.drop_index(op.f("ix_notes_page_id"), table_name="notes")
    op.drop_index(op.f("ix_notes_id"), table_name="notes")
    op.drop_index("idx_note_user_id", table_name="notes")
    op.drop_index("idx_note_page_user", table_name="notes")
    op.drop_table("notes")
    op.drop_index(op.f("ix_user_site_shares_user_id"), table_name="user_site_shares")
    op.drop_index(op.f("ix_user_site_shares_site_id"), table_name="user_site_shares")
    op.drop_index(op.f("ix_user_site_shares_id"), table_name="user_site_shares")
    op.drop_index("idx_user_site_share_unique", table_name="user_site_shares")
    op.drop_index("idx_user_site_share_permission", table_name="user_site_shares")
    op.drop_table("user_site_shares")
    op.drop_index(op.f("ix_pages_user_id"), table_name="pages")
    op.drop_index(op.f("ix_pages_url"), table_name="pages")
    op.drop_index(op.f("ix_pages_site_id"), table_name="pages")
    op.drop_index(op.f("ix_pages_id"), table_name="pages")
    op.drop_index("idx_page_user_id", table_name="pages")
    op.drop_index("idx_page_url_user", table_name="pages")
    op.drop_index("idx_page_site_user", table_name="pages")
    op.drop_table("pages")
    op.drop_index(op.f("ix_usage_costs_user_id"), table_name="usage_costs")
    op.drop_index(op.f("ix_usage_costs_llm_provider_id"), table_name="usage_costs")
    op.drop_index(op.f("ix_usage_costs_id"), table_name="usage_costs")
    op.drop_index("idx_usage_costs_user_date", table_name="usage_costs")
    op.drop_index("idx_usage_costs_provider", table_name="usage_costs")
    op.drop_table("usage_costs")
    op.drop_index(op.f("ix_sites_user_id"), table_name="sites")
    op.drop_index(op.f("ix_sites_id"), table_name="sites")
    op.drop_index(op.f("ix_sites_domain"), table_name="sites")
    op.drop_index("idx_site_user_id", table_name="sites")
    op.drop_index("idx_site_domain_user", table_name="sites")
    op.drop_table("sites")
    op.drop_index(op.f("ix_users_id"), table_name="users")
    op.drop_index(op.f("ix_users_email"), table_name="users")
    op.drop_index(op.f("ix_users_chrome_user_id"), table_name="users")
    op.drop_index("idx_user_email", table_name="users")
    op.drop_index("idx_user_chrome_id", table_name="users")
    op.drop_index("idx_user_active", table_name="users")
    op.drop_table("users")
    op.drop_index(op.f("ix_llm_providers_name"), table_name="llm_providers")
    op.drop_index(op.f("ix_llm_providers_id"), table_name="llm_providers")
    op.drop_table("llm_providers")
    # ### end Alembic commands ###
